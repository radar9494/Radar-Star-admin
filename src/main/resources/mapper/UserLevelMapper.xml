<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuqi.business.mapper.UserLevelMapper">

	<!-- 常用查询 -->
	<sql id="allColumn">
		<trim suffixOverrides=",">
			t.id,t.create_time,t.update_time,t.remark,t.version,t.user_id,t.parent_id,t.tree_level,t.tree_info,
		</trim>
	</sql>

    <!-- 数据库和实体映射  对应数据库实体-->
	<resultMap type="userLevelModel" id="userLevel">
		<result property="id" column="id"/>
		<result property="createTime" column="create_time"/>
		<result property="updateTime" column="update_time"/>
		<result property="remark" column="remark"/>
		<result property="version" column="version"/>
		<result property="userId" column="user_id"/>
		<result property="parentId" column="parent_id"/>
		<result property="treeLevel" column="tree_level"/>
		<result property="treeInfo" column="tree_info"/>
	</resultMap>

	<!-- dto映射  添加的字段放在这块-->
    <resultMap type="userLevelModelDto" extends="userLevel" id="userLevelDto">
    </resultMap>

	<!-- 新增 -->
	<insert id="insert" keyColumn="id" keyProperty="id" useGeneratedKeys="true" parameterType="userLevelModel">
		insert into t_user_level(
		<trim  suffixOverrides=",">
				<if test="createTime != null">`create_time`,</if>
				<if test="updateTime != null">`update_time`,</if>
				<if test="remark != null">`remark`,</if>
				<if test="version != null">`version`,</if>
				<if test="userId != null">`user_id`,</if>
				<if test="parentId != null">`parent_id`,</if>
				<if test="treeLevel != null">`tree_level`,</if>
				<if test="treeInfo != null">`tree_info`,</if>
		
		</trim>
		) values(
		<trim suffixOverrides=",">
				<if test="createTime != null">#{createTime},</if>
				<if test="updateTime != null">#{updateTime},</if>
				<if test="remark != null">#{remark},</if>
				<if test="version != null">#{version},</if>
				<if test="userId != null">#{userId},</if>
				<if test="parentId != null">#{parentId},</if>
				<if test="treeLevel != null">#{treeLevel},</if>
				<if test="treeInfo != null">#{treeInfo},</if>
		
		</trim>
		)
	</insert>

	<!-- 更新 -->
	<update id="update" parameterType="userLevelModel">
		update  t_user_level
		<set>
            <if test="createTime != null">
                    `create_time` = #{createTime},
            </if>
            <if test="updateTime != null">
                    `update_time` = #{updateTime},
            </if>
            <if test="remark != null">
                    `remark` = #{remark},
            </if>
            <if test="version != null">
                    `version` = #{version},
            </if>
            <if test="userId != null">
                    `user_id` = #{userId},
            </if>
            <if test="parentId != null">
                    `parent_id` = #{parentId},
            </if>
            <if test="treeLevel != null">
                    `tree_level` = #{treeLevel},
            </if>
            <if test="treeInfo != null">
                    `tree_info` = #{treeInfo},
            </if>
		</set>
		where id = #{id}
	</update>


	<!-- 查询 -->
	<select id="getById" resultMap="userLevelDto">
		select <include refid="allColumn"></include> 
		from  t_user_level t 
		where t.id = #{id}
	</select>
	<!-- 查询 -->
	<select id="getByIds" resultMap="userLevelDto">
		select <include refid="allColumn"></include> 
		from  t_user_level t 
		where  t.id in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>


    <!-- 优化查询count -->
    <select id="queryList_COUNT" parameterType="userLevelModelDto" resultType="Long">
        select count(t.id)
        <include refid="queryList_base"></include>
    </select>

	<!-- 查询列表 -->
	<select id="queryList" parameterType="userLevelModelDto" resultMap="userLevelDto">
		select <include refid="allColumn"></include>
        <include refid="queryList_base"></include>
		<!-- 排序 -->
		<if test="sortName != null and sortName!=''">
			order by t.${sortName}
            <if test="sortType != null and sortType!=''">
                 ${sortType}
            </if>
		</if>
	</select>

    <!-- base基础查询 -->
	<sql id="queryList_base">
        from  t_user_level t
        <trim prefix="where" prefixOverrides="AND|OR">
			<if test="id != null    and id &gt; -2 ">
				AND t.id = #{id}
            </if>
	
			<if test="createTime != null  ">
				AND t.create_time = #{createTime}
            </if>
	
			<if test="updateTime != null   ">
				AND t.update_time = #{updateTime}
            </if>
	
			<if test="remark != null and  remark != ''   ">
				AND t.remark = #{remark}
            </if>
	
			<if test="version != null    and version &gt; -2 ">
				AND t.version = #{version}
            </if>
	
			<if test="userId != null    and userId &gt; -2 ">
				AND t.user_id = #{userId}
            </if>
	
			<if test="parentId != null    and parentId &gt; -2 ">
				AND t.parent_id = #{parentId}
            </if>
	
			<if test="treeLevel != null    and treeLevel &gt; -2 ">
				AND t.tree_level = #{treeLevel}
            </if>
	
			<if test="treeInfo != null and  treeInfo != ''   ">
				AND t.tree_info = #{treeInfo}
            </if>
			<if test="searchTreeInfo!=null and searchTreeInfo !=''">
				and t.tree_info like concat(#{searchTreeInfo},'%')
			</if>
			<if test="startCreateTime!=null">
				and t.create_time>#{startCreateTime}
			</if>
			<if test="endCreateTime!=null">
				<![CDATA[and t.create_time<=#{endCreateTime}]]>
			</if>
			
        </trim>
	</sql>


	<select id="getByUserId" resultMap="userLevelDto">
		select <include refid="allColumn"></include>
		from  t_user_level t
		where t.user_id = #{userId}
		limit 1
	</select>

	<select id="getAllSubIdList" resultType="long">
		select t.user_id
		from  t_user_level t
		where t.tree_info like concat(#{treeInfo},'%')
	</select>

	<select id="getAssignSubIdList" resultType="long">
		select t.user_id
		from  t_user_level t
		where t.tree_info like concat(#{treeInfo},'%') and t.tree_level=#{treeLevel}
	</select>

	<select id="getTreeByParentId" resultType="com.liuqi.business.dto.UserTreeDto">
		select t.user_id as id,t.parent_id as pId
		from  t_user_level t
		where t.parent_id = #{parentId}
		order by create_time asc
	</select>

	<select id="getTreeByUserId" resultType="com.liuqi.business.dto.UserTreeDto">
		select t.user_id as id,t.parent_id as pId
		from  t_user_level t
		where t.id = #{userId}
		order by create_time asc
	</select>

	<update id="changeLevel">
		update t_user_level
		set
		tree_level=tree_level+#{changeTreeLevel},
		tree_info=replace(tree_info,#{userTreeInfo},#{replaceTreeInfo})
		where  tree_info like CONCAT(#{userTreeInfo},'%');
	</update>
</mapper>