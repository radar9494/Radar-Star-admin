<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuqi.business.mapper.TradeRecordMapper">

	<!-- 常用查询 -->
	<sql id="allColumn">
		<trim suffixOverrides=",">
			t.id,t.create_time,t.update_time,t.remark,t.version,t.trade_id,t.sell_user_id,t.sell_trustee_id,t.buy_user_id,t.buy_trustee_id,t.trade_quantity,
			t.trade_price,t.sell_charge,t.buy_charge,t.buy_price,t.sell_price,t.robot,t.trade_type,t.buy_wallet_status,t.sell_wallet_status,
		</trim>
	</sql>

    <!-- 数据库和实体映射  对应数据库实体-->
	<resultMap type="tradeRecordModel" id="tradeRecord">
		<result property="id" column="id"/>
		<result property="createTime" column="create_time"/>
		<result property="updateTime" column="update_time"/>
		<result property="remark" column="remark"/>
		<result property="version" column="version"/>
		<result property="tradeId" column="trade_id"/>
		<result property="sellUserId" column="sell_user_id"/>
		<result property="sellTrusteeId" column="sell_trustee_id"/>
		<result property="buyUserId" column="buy_user_id"/>
		<result property="buyTrusteeId" column="buy_trustee_id"/>
		<result property="tradeQuantity" column="trade_quantity"/>
		<result property="tradePrice" column="trade_price"/>
		<result property="sellCharge" column="sell_charge"/>
		<result property="buyCharge" column="buy_charge"/>
		<result property="buyPrice" column="buy_price"/>
		<result property="sellPrice" column="sell_price"/>
		<result property="robot" column="robot"/>
		<result property="tradeType" column="trade_type"/>
		<result property="buyWalletStatus" column="buy_wallet_status"/>
		<result property="sellWalletStatus" column="sell_wallet_status"/>
	</resultMap>

	<!-- dto映射  添加的字段放在这块-->
    <resultMap type="tradeRecordModelDto" extends="tradeRecord" id="tradeRecordDto">
    </resultMap>

	<!-- 新增 -->
	<insert id="insert" keyColumn="id" keyProperty="id" useGeneratedKeys="true" parameterType="tradeRecordModel">
		insert into t_trade_record(
		<trim  suffixOverrides=",">
				id,
				<if test="createTime != null">`create_time`,</if>
				<if test="updateTime != null">`update_time`,</if>
				<if test="remark != null">`remark`,</if>
				<if test="version != null">`version`,</if>
				<if test="tradeId != null">`trade_id`,</if>
				<if test="sellUserId != null">`sell_user_id`,</if>
				<if test="sellTrusteeId != null">`sell_trustee_id`,</if>
				<if test="buyUserId != null">`buy_user_id`,</if>
				<if test="buyTrusteeId != null">`buy_trustee_id`,</if>
				<if test="tradeQuantity != null">`trade_quantity`,</if>
				<if test="tradePrice != null">`trade_price`,</if>
				<if test="sellCharge != null">`sell_charge`,</if>
				<if test="buyCharge != null">`buy_charge`,</if>
				<if test="buyPrice != null">`buy_price`,</if>
				<if test="sellPrice != null">`sell_price`,</if>
				<if test="robot != null">`robot`,</if>
				<if test="tradeType != null">`trade_type`,</if>
				<if test="buyWalletStatus != null">`buy_wallet_status`,</if>
				<if test="sellWalletStatus != null">`sell_wallet_status`,</if>

		</trim>
		) values(
		<trim suffixOverrides=",">
				#{id},
				<if test="createTime != null">#{createTime},</if>
				<if test="updateTime != null">#{updateTime},</if>
				<if test="remark != null">#{remark},</if>
				<if test="version != null">#{version},</if>
				<if test="tradeId != null">#{tradeId},</if>
				<if test="sellUserId != null">#{sellUserId},</if>
				<if test="sellTrusteeId != null">#{sellTrusteeId},</if>
				<if test="buyUserId != null">#{buyUserId},</if>
				<if test="buyTrusteeId != null">#{buyTrusteeId},</if>
				<if test="tradeQuantity != null">#{tradeQuantity},</if>
				<if test="tradePrice != null">#{tradePrice},</if>
				<if test="sellCharge != null">#{sellCharge},</if>
				<if test="buyCharge != null">#{buyCharge},</if>
				<if test="buyPrice != null">#{buyPrice},</if>
				<if test="sellPrice != null">#{sellPrice},</if>
				<if test="robot != null">#{robot},</if>
				<if test="tradeType != null">#{tradeType},</if>
				<if test="buyWalletStatus != null">#{buyWalletStatus},</if>
				<if test="sellWalletStatus != null">#{sellWalletStatus},</if>

		</trim>
		)
	</insert>

	<!-- 更新 -->
	<update id="update" parameterType="tradeRecordModel">
		update  t_trade_record
		<set>
            <if test="createTime != null">
                    `create_time` = #{createTime},
            </if>
            <if test="updateTime != null">
                    `update_time` = #{updateTime},
            </if>
            <if test="remark != null">
                    `remark` = #{remark},
            </if>
            <if test="version != null">
                    `version` = #{version},
            </if>
            <if test="tradeId != null">
                    `trade_id` = #{tradeId},
            </if>
            <if test="sellUserId != null">
                    `sell_user_id` = #{sellUserId},
            </if>
            <if test="sellTrusteeId != null">
                    `sell_trustee_id` = #{sellTrusteeId},
            </if>
            <if test="buyUserId != null">
                    `buy_user_id` = #{buyUserId},
            </if>
            <if test="buyTrusteeId != null">
                    `buy_trustee_id` = #{buyTrusteeId},
            </if>
            <if test="tradeQuantity != null">
                    `trade_quantity` = #{tradeQuantity},
            </if>
            <if test="tradePrice != null">
                    `trade_price` = #{tradePrice},
            </if>
            <if test="sellCharge != null">
                    `sell_charge` = #{sellCharge},
            </if>
            <if test="buyCharge != null">
                    `buy_charge` = #{buyCharge},
            </if>
            <if test="buyPrice != null">
                    `buy_price` = #{buyPrice},
            </if>
            <if test="sellPrice != null">
                    `sell_price` = #{sellPrice},
            </if>
            <if test="robot != null">
                    `robot` = #{robot},
            </if>
            <if test="tradeType != null">
                    `trade_type` = #{tradeType},
            </if>
			<if test="buyWalletStatus != null">
				`buy_wallet_status` = #{buyWalletStatus},
			</if>
			<if test="sellWalletStatus != null">
				`sell_wallet_status` = #{sellWalletStatus},
			</if>
		</set>
		where id = #{id}
	</update>


	<!-- 查询 -->
	<select id="getById" resultMap="tradeRecordDto">
		select <include refid="allColumn"></include> 
		from  t_trade_record t 
		where t.id = #{id}
	</select>
	<!-- 查询 -->
	<select id="getByIds" resultMap="tradeRecordDto">
		select <include refid="allColumn"></include> 
		from  t_trade_record t 
		where  t.id in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>


    <!-- 优化查询count -->
    <select id="queryList_COUNT" parameterType="tradeRecordModelDto" resultType="Long">
        select count(t.id)
        <include refid="queryList_base"></include>
    </select>

	<!-- 查询列表 -->
	<select id="queryList" parameterType="tradeRecordModelDto" resultMap="tradeRecordDto">
		select <include refid="allColumn"></include>
        <include refid="queryList_base"></include>
		<!-- 排序 -->
		<if test="sortName != null and sortName!=''">
			order by t.${sortName}
            <if test="sortType != null and sortType!=''">
                 ${sortType}
            </if>
		</if>
	</select>

    <!-- base基础查询 -->
	<sql id="queryList_base">
        from  t_trade_record t
        <trim prefix="where" prefixOverrides="AND|OR">
			<if test="id != null">
				AND t.id = #{id}
            </if>
	
			<if test="createTime != null ">
				AND t.create_time = #{createTime}
            </if>
	
			<if test="updateTime != null ">
				AND t.update_time = #{updateTime}
            </if>
	
			<if test="remark != null and  remark != ''">
				AND t.remark = #{remark}
            </if>
	
			<if test="version != null and  version &gt; -2">
				AND t.version = #{version}
            </if>
	
			<if test="tradeId != null and  tradeId &gt; -2">
				AND t.trade_id = #{tradeId}
            </if>
	
			<if test="sellUserId != null and  sellUserId &gt; -2">
				AND t.sell_user_id = #{sellUserId}
            </if>
	
			<if test="sellTrusteeId != null and  sellTrusteeId &gt; -2">
				AND t.sell_trustee_id = #{sellTrusteeId}
            </if>
	
			<if test="buyUserId != null and  buyUserId &gt; -2">
				AND t.buy_user_id = #{buyUserId}
            </if>
	
			<if test="buyTrusteeId != null and  buyTrusteeId &gt; -2">
				AND t.buy_trustee_id = #{buyTrusteeId}
            </if>
	
			<if test="tradeQuantity != null and  tradeQuantity &gt; -2">
				AND t.trade_quantity = #{tradeQuantity}
            </if>
	
			<if test="tradePrice != null and  tradePrice &gt; -2">
				AND t.trade_price = #{tradePrice}
            </if>
	
			<if test="sellCharge != null and  sellCharge &gt; -2">
				AND t.sell_charge = #{sellCharge}
            </if>
	
			<if test="buyCharge != null and  buyCharge &gt; -2">
				AND t.buy_charge = #{buyCharge}
            </if>
	
			<if test="buyPrice != null and  buyPrice &gt; -2">
				AND t.buy_price = #{buyPrice}
            </if>
	
			<if test="sellPrice != null and  sellPrice &gt; -2">
				AND t.sell_price = #{sellPrice}
            </if>
	
			<if test="robot != null and  robot &gt; -2">
				AND t.robot = #{robot}
            </if>
			<if test="buyWalletStatus != null and  buyWalletStatus &gt; -2">
				AND t.buy_wallet_status = #{buyWalletStatus}
			</if>
			<if test="sellWalletStatus != null and  sellWalletStatus &gt; -2">
				AND t.sell_wallet_status = #{sellWalletStatus}
			</if>
	
			<if test="tradeType != null and  tradeType &gt; -2">
				AND t.trade_type = #{tradeType}
            </if>
			<if test="startCreateTime!=null">
				and t.create_time>#{startCreateTime}
			</if>
			<if test="endCreateTime!=null">
				<![CDATA[and t.create_time<=#{endCreateTime}]]>
			</if>
			<if test="searchTradeList!=null and searchTradeList">
				AND t.trade_id in
				<foreach collection="tradeList" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
			
        </trim>
	</sql>

	<select id="findClosePriceByDate" resultType="java.math.BigDecimal">
		select t.trade_price from t_trade_record t where <![CDATA[t.create_time<= #{endTime} ]]>
		and t.trade_id=#{tradeId}  order by t.create_time desc limit 1
	</select>

	<select id="findOpenPriceByDate" resultType="java.math.BigDecimal">
		select t.trade_price from t_trade_record t where t.create_time > #{startTime}
		and t.trade_id=#{tradeId}  order by t.create_time asc limit 1
	</select>

	<select id="selectDayOpenPrice" resultType="java.math.BigDecimal">
		<![CDATA[
		select t.trade_price from t_trade_record t
		where t.create_time < #{startDate} AND t.trade_id =#{tradeId} order by t.create_time desc limit 1
		]]>
	</select>
	<select id="selectDayFirstPrice" resultType="java.math.BigDecimal">
		<![CDATA[
		select t.trade_price from t_trade_record t
		where t.create_time >= #{startDate} AND t.trade_id =#{tradeId} order by t.create_time asc limit 1
		]]>
	</select>
	<select id="findTodayTrade" resultType="com.liuqi.business.dto.TradeInfoDto">
		select IFNULL(max(trade_price),0) as tradeMaxPrice,IFNULL(min(trade_price),0) as tradeMinPrice ,IFNULL(sum(trade_quantity),0) as tradeNums,IFNULL(sum(trade_quantity*trade_price),0) as tradeMoney
		from t_trade_record t
		where t.trade_id=#{tradeId}
		and t.create_time>=DATE(now())
	</select>
	<select id="selectCurrentTradePrice" resultType="java.math.BigDecimal">
		select trade_price as currentPrice
		from t_trade_record t
		where t.trade_id=#{tradeId}
		order by t.create_time desc
		limit 1
	</select>
	<select id="findTradeDataByDate" resultType="com.liuqi.business.model.KDataModelDto">
		select ifnull(max(t.trade_price),0) as maxPrice,
		ifnull(min(t.trade_price),0) as minPrice ,
		ifnull(sum(t.trade_quantity),0) as nums
		from t_trade_record t
		where  t.trade_id=#{tradeId}
		and t.create_time >=#{startDate}
		and <![CDATA[t.create_time < #{endDate}]]>
	</select>

	<select id="findTradeRecordList" resultMap="tradeRecordDto">
		select <include refid="allColumn"></include>
		from t_trade_record t
		where trade_id=#{tradeId}
		order by t.create_time desc
		limit #{num}
	</select>

	<select id="findRecordList" resultType="com.liuqi.business.dto.RecordDto">
		select t.create_time as date,t.trade_type as tradeType,t.trade_price as price,t.trade_quantity as num
		from t_trade_record t
		where trade_id=#{tradeId}
		order by t.create_time desc
		limit #{num}
	</select>
</mapper>