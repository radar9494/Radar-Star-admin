<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuqi.business.mapper.LockWalletUpdateLogMapper">

	<!-- 常用查询 -->
	<sql id="allColumn">
		<trim suffixOverrides=",">
			t.id,t.update_time,t.create_time,t.remark,t.version,
			t.user_id,t.currency_id,t.old_lock,t.new_lock,t.old_freeze,t.new_freeze,t.admin_id,t.modify_lock,t.modify_freeze,
		</trim>
	</sql>

    <!-- 数据库和实体映射  对应数据库实体-->
	<resultMap type="lockWalletUpdateLogModel" id="lockWalletUpdateLog">
	    <result property="id" column="id"/>
	    <result property="updateTime" column="update_time"/>
	    <result property="createTime" column="create_time"/>
	    <result property="remark" column="remark"/>
	    <result property="version" column="version"/>
		<result property="userId" column="user_id"/>
		<result property="currencyId" column="currency_id"/>
		<result property="oldLock" column="old_lock"/>
		<result property="newLock" column="new_lock"/>
		<result property="oldFreeze" column="old_freeze"/>
		<result property="newFreeze" column="new_freeze"/>
		<result property="adminId" column="admin_id"/>
		<result property="modifyLock" column="modify_lock"/>
		<result property="modifyFreeze" column="modify_freeze"/>
	</resultMap>
    <!-- dto映射  添加的字段放在这块-->
    <resultMap type="lockWalletUpdateLogModelDto" extends="lockWalletUpdateLog" id="lockWalletUpdateLogDto">
		<result property="adminName" column="adminName"></result>
    </resultMap>

	<!-- 新增 -->
	<insert id="insert" keyColumn="id" keyProperty="id" useGeneratedKeys="true" parameterType="lockWalletUpdateLogModel">
		insert into t_lock_wallet_update_log(
		<trim  suffixOverrides=",">
			`update_time`,`create_time`,`remark`,`version`,
			`user_id`,`currency_id`,`old_lock`,`new_lock`,`old_freeze`,`new_freeze`,`admin_id`,`modify_lock`,`modify_freeze`,
		</trim>
		) values(
		<trim suffixOverrides=",">
			#{updateTime},#{createTime},#{remark},#{version},
			#{userId},#{currencyId},#{oldLock},#{newLock},#{oldFreeze},#{newFreeze},#{adminId},#{modifyLock},#{modifyFreeze},
		</trim>
		)
	</insert>

	<!-- 更新 -->
	<update id="update" parameterType="lockWalletUpdateLogModel">
		update  t_lock_wallet_update_log
		<set>
		    <if test="updateTime != null">
                `update_time` = #{updateTime},
            </if>
		    <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
		    <if test="remark != null">
                `remark` = #{remark},
            </if>
		    <if test="version != null">
                `version` = #{version},
            </if>
			<if test="userId != null">
                `user_id` = #{userId},
            </if>
			<if test="currencyId != null">
				`currency_id` = #{currencyId},
			</if>
            <if test="oldLock != null">
                    `old_lock` = #{oldLock},
            </if>
            <if test="newLock != null">
                    `new_lock` = #{newLock},
            </if>
            <if test="oldFreeze != null">
                    `old_freeze` = #{oldFreeze},
            </if>
            <if test="newFreeze != null">
                    `new_freeze` = #{newFreeze},
            </if>
            <if test="adminId != null">
                    `admin_id` = #{adminId},
            </if>
			<if test="modifyLock != null">
				`modify_lock` = #{modifyLock},
			</if>
			<if test="modifyFreeze != null">
				`modify_freeze` = #{modifyFreeze},
			</if>
		</set>
		where id = #{id}
	</update>


	<!-- 查询 -->
	<select id="getById" resultMap="lockWalletUpdateLogDto">
		select <include refid="allColumn"></include> 
		from  t_lock_wallet_update_log t 
		where t.id = #{id}
	</select>
	<!-- 查询 -->
	<select id="getByIds" resultMap="lockWalletUpdateLogDto">
		select <include refid="allColumn"></include> 
		from  t_lock_wallet_update_log t 
		where  t.id in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>


	<!-- 查询列表 -->
	<select id="queryList" parameterType="lockWalletUpdateLogModelDto" resultMap="lockWalletUpdateLogDto">
		select <include refid="allColumn"></include>,ua.name as adminName
		from  t_lock_wallet_update_log t
		join t_user_admin ua  on t.admin_id=ua.id
		<trim prefix="where" prefixOverrides="AND|OR">
		
			<if test="id != null ">
				AND t.id = #{id}
			</if>
		
			<if test="updateTime != null  ">
				AND t.update_time = #{updateTime}
			</if>
		
			<if test="createTime != null ">
				AND t.create_time = #{createTime}
			</if>
		
			<if test="remark != null  and  remark != '' ">
				AND t.remark = #{remark}
			</if>
		
			<if test="version != null ">
				AND t.version = #{version}
			</if>
		
			<if test="userId != null  and userId &gt; -2">
				AND t.user_id = #{userId}
			</if>
			<if test="currencyId != null  and currencyId &gt; -2">
				AND t.currency_id = #{currencyId}
			</if>
			<if test="oldLock != null  ">
				AND t.old_lock = #{oldLock}
			</if>

			<if test="newLock != null  ">
				AND t.new_lock = #{newLock}
			</if>

			<if test="oldFreeze != null ">
				AND t.old_freeze = #{oldFreeze}
			</if>

			<if test="newFreeze != null ">
				AND t.new_freeze = #{newFreeze}
			</if>

			<if test="adminId != null and    adminId &gt; -2">
				AND t.admin_id = #{adminId}
			</if>
			<if test="adminName != null and  adminName != '' ">
				AND ua.name = #{adminName}
			</if>
			<if test="startCreateTime!=null">
				and t.create_time>#{startCreateTime}
			</if>
			<if test="endCreateTime!=null">
				<![CDATA[and t.create_time<=#{endCreateTime}]]>
			</if>
		</trim>
		
		<!-- 排序 -->
		<if test="sortName != null and sortName!=''">
			order by t.${sortName}
            <if test="sortType != null and sortType!=''">
                 ${sortType}
            </if>
		</if>

	</select>



</mapper>